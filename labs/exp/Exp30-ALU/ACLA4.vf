////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : ACLA4.vf
// /___/   /\     Timestamp : 08/27/2016 22:21:51
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/FPGA_work/SWord-DLD/Exp30-ALU/Code -intstyle ise -family kintex7 -verilog E:/FPGA_work/SWord-DLD/Exp30-ALU/ACLA4.vf -w E:/FPGA_work/SWord-DLD/Exp30-ALU/Code/ACLA4.sch
//Design Name: ACLA4
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module add_MUSER_ACLA4(ai, 
                       bi, 
                       ci, 
                       co, 
                       Gi, 
                       Pi, 
                       si);

    input ai;
    input bi;
    input ci;
   output co;
   output Gi;
   output Pi;
   output si;
   
   wire XLXN_10;
   wire Pi_DUMMY;
   wire Gi_DUMMY;
   
   assign Gi = Gi_DUMMY;
   assign Pi = Pi_DUMMY;
   XOR2  XLXI_1 (.I0(bi), 
                .I1(ai), 
                .O(Pi_DUMMY));
   XOR2  XLXI_2 (.I0(ci), 
                .I1(Pi_DUMMY), 
                .O(si));
   AND2  XLXI_3 (.I0(ci), 
                .I1(Pi_DUMMY), 
                .O(XLXN_10));
   AND2  XLXI_4 (.I0(ai), 
                .I1(bi), 
                .O(Gi_DUMMY));
   OR2  XLXI_5 (.I0(Gi_DUMMY), 
               .I1(XLXN_10), 
               .O(co));
endmodule
`timescale 1ns / 1ps

module CLA_MUSER_ACLA4(Ci, 
                       G0, 
                       G1, 
                       G2, 
                       G3, 
                       P0, 
                       P1, 
                       P2, 
                       P3, 
                       C1, 
                       C2, 
                       C3, 
                       GG, 
                       GP);

    input Ci;
    input G0;
    input G1;
    input G2;
    input G3;
    input P0;
    input P1;
    input P2;
    input P3;
   output C1;
   output C2;
   output C3;
   output GG;
   output GP;
   
   wire XLXN_3;
   wire XLXN_36;
   wire XLXN_59;
   wire XLXN_100;
   wire XLXN_105;
   wire XLXN_108;
   wire XLXN_163;
   wire XLXN_164;
   wire XLXN_165;
   
   AND2  XLXI_1 (.I0(P0), 
                .I1(Ci), 
                .O(XLXN_3));
   AND2  XLXI_2 (.I0(G0), 
                .I1(P1), 
                .O(XLXN_59));
   OR2  XLXI_3 (.I0(G0), 
               .I1(XLXN_3), 
               .O(C1));
   OR3  XLXI_4 (.I0(G1), 
               .I1(XLXN_59), 
               .I2(XLXN_36), 
               .O(C2));
   AND3  XLXI_5 (.I0(P1), 
                .I1(P0), 
                .I2(Ci), 
                .O(XLXN_36));
   AND2  XLXI_18 (.I0(P2), 
                 .I1(G1), 
                 .O(XLXN_108));
   AND3  XLXI_19 (.I0(P2), 
                 .I1(P1), 
                 .I2(G0), 
                 .O(XLXN_105));
   AND4  XLXI_20 (.I0(P2), 
                 .I1(P1), 
                 .I2(P0), 
                 .I3(Ci), 
                 .O(XLXN_100));
   OR4  XLXI_21 (.I0(G2), 
                .I1(XLXN_108), 
                .I2(XLXN_105), 
                .I3(XLXN_100), 
                .O(C3));
   AND4  XLXI_22 (.I0(P3), 
                 .I1(P2), 
                 .I2(P1), 
                 .I3(P0), 
                 .O(GP));
   AND4  XLXI_23 (.I0(P3), 
                 .I1(P2), 
                 .I2(P1), 
                 .I3(G0), 
                 .O(XLXN_163));
   AND3  XLXI_24 (.I0(P3), 
                 .I1(P2), 
                 .I2(G1), 
                 .O(XLXN_164));
   AND2  XLXI_25 (.I0(P3), 
                 .I1(G2), 
                 .O(XLXN_165));
   OR4  XLXI_26 (.I0(G3), 
                .I1(XLXN_165), 
                .I2(XLXN_164), 
                .I3(XLXN_163), 
                .O(GG));
endmodule
`timescale 1ns / 1ps

module ACLA4(ai, 
             bi, 
             C0, 
             GG, 
             GP, 
             s);

    input [3:0] ai;
    input [3:0] bi;
    input C0;
   output GG;
   output GP;
   output [3:0] s;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_180;
   wire XLXN_217;
   wire XLXN_218;
   
   add_MUSER_ACLA4  A0 (.ai(ai[0]), 
                       .bi(bi[0]), 
                       .ci(C0), 
                       .co(), 
                       .Gi(XLXN_218), 
                       .Pi(XLXN_180), 
                       .si(s[0]));
   add_MUSER_ACLA4  A1 (.ai(ai[1]), 
                       .bi(bi[1]), 
                       .ci(XLXN_8), 
                       .co(), 
                       .Gi(XLXN_7), 
                       .Pi(XLXN_217), 
                       .si(s[1]));
   add_MUSER_ACLA4  A2 (.ai(ai[2]), 
                       .bi(bi[2]), 
                       .ci(XLXN_13), 
                       .co(), 
                       .Gi(XLXN_10), 
                       .Pi(XLXN_9), 
                       .si(s[2]));
   add_MUSER_ACLA4  A3 (.ai(ai[3]), 
                       .bi(bi[3]), 
                       .ci(XLXN_14), 
                       .co(), 
                       .Gi(XLXN_12), 
                       .Pi(XLXN_11), 
                       .si(s[3]));
   CLA_MUSER_ACLA4  CLA0 (.Ci(C0), 
                         .G0(XLXN_218), 
                         .G1(XLXN_7), 
                         .G2(XLXN_10), 
                         .G3(XLXN_12), 
                         .P0(XLXN_180), 
                         .P1(XLXN_217), 
                         .P2(XLXN_9), 
                         .P3(XLXN_11), 
                         .C1(XLXN_8), 
                         .C2(XLXN_13), 
                         .C3(XLXN_14), 
                         .GG(GG), 
                         .GP(GP));
endmodule
